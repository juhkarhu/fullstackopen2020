{"version":3,"sources":["components/Blog.js","services/blogs.js","services/login.js","components/Notification.js","components/Togglable.js","components/LoginForm.js","components/AddBlogForm.js","App.js","index.js"],"names":["Blog","blog","title","author","baseUrl","token","exportedObjects","getAll","console","log","axios","get","then","response","data","setToken","newToken","create","blogObject","a","config","headers","Authorization","post","exportedObject","login","credentials","Notification","message","className","Togglable","props","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","style","onClick","buttonLabel","children","LoginForm","username","password","onUsernameChange","onPasswordChange","handleSubmit","onSubmit","value","onChange","type","AddBlogForm","titleValue","onTitleChange","authorValue","onAuthorChange","urlValue","onUrlChange","App","blogs","setBlogs","newTitle","setNewTitle","newAuthor","setNewAuthor","newUrl","setNewUrl","notificationMessage","setNotificationMessage","setClassName","setUsername","setPassword","user","setUser","useEffect","blogService","loggedUserJSON","window","localStorage","getItem","JSON","parse","handleLogin","event","preventDefault","loginService","setItem","stringify","name","setTimeout","handleLogout","clear","location","reload","handleTitleChange","target","handleAuthorChange","handleUrlChange","addBlog","url","hit","filter","toLowerCase","returnedBlogs","concat","catch","error","map","id","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1bf86ec5.chunk.js","sourcesContent":["import React from 'react'\nconst Blog = ({blog}) => (\n  <div>\n    {blog.title} {blog.author}\n  </div>  \n)\n\nexport default Blog","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  console.log('front1')\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async blogObject => {\n  const config = {\n    headers: { Authorization: token}\n  }\n\n  const response = await axios.post(baseUrl, blogObject, config)\n  return response.data\n}\n\nconst exportedObjects = { getAll, setToken, create }\n\nexport default exportedObjects","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nconst exportedObject = {login}\n\nexport default exportedObject","const Notification = ({\n  message,\n  className\n}) => {\n\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className={className}>\n      {message}\n    </div>\n  )\n}\n\n\nexport default Notification","import React, { useState } from 'react'\n\nconst Togglable = (props) => {\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n        <button onClick={toggleVisibility}>Cancel</button>\n      </div>\n    </div>\n  )\n}\n\nexport default Togglable","import React from 'react'\n\nconst LoginForm = ({\n  username,\n  password,\n  onUsernameChange,\n  onPasswordChange,\n  handleSubmit\n}) => {\n  return (\n    <div>\n      <h2>Login</h2>\n\n      <form onSubmit={handleSubmit}>\n        <div>\n          username\n          <input\n            value={username}\n            onChange={onUsernameChange}\n          />\n        </div>\n        <div>\n          password\n          <input\n            type=\"password\"\n            value={password}\n            onChange={onPasswordChange}\n          />\n        </div>\n        <button type=\"submit\">login</button>\n      </form>\n\n    </div>\n  )\n}\n\n\nexport default LoginForm","import React from 'react'\n\n\nconst AddBlogForm = ({\n  onSubmit,\n  titleValue,\n  onTitleChange,\n  authorValue,\n  onAuthorChange,\n  urlValue,\n  onUrlChange\n}) => (\n  <form onSubmit={onSubmit}>\n    <div>\n      Title: <input value={titleValue} onChange={onTitleChange} />\n    </div>\n    <div>\n      Author: <input value={authorValue} onChange={onAuthorChange} />\n    </div>\n    <div>\n      Url: <input value={urlValue} onChange={onUrlChange} />\n    </div>\n    <div>\n      <button type=\"submit\">Add a new Blog</button>\n    </div>\n  </form>\n)\n\nexport default AddBlogForm","import React, { useState, useEffect } from 'react'\nimport Blog from './components/Blog'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport Notification from './components/Notification'\nimport Togglable from './components/Togglable'\nimport LoginForm from './components/LoginForm'\nimport AddBlogForm from './components/AddBlogForm'\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n\n  const [newTitle, setNewTitle] = useState('')\n  const [newAuthor, setNewAuthor] = useState('')\n  const [newUrl, setNewUrl] = useState('')\n\n  const [notificationMessage, setNotificationMessage] = useState(null)\n  const [className, setClassName] = useState(null)\n\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const [user, setUser] = useState(null)\n\n\n\n  useEffect(() => {\n    console.log('effecthook pyörähtää, kaikki blogit haetaan')\n    blogService.getAll().then(blogs =>\n      setBlogs(blogs)\n    )\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, password\n      })\n      window.localStorage.setItem(\n        'loggedUser', JSON.stringify(user)\n      )\n      blogService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n      setClassName('update')\n      setNotificationMessage(`Logged in as ${user.name}`)\n      setTimeout(() => {\n        setClassName(null)\n        setNotificationMessage(null)\n      }, 3000)\n    } catch (exception) {\n      setClassName('delete')\n      setNotificationMessage('wrong username or password')\n      setTimeout(() => {\n        setClassName(null)\n        setNotificationMessage(null)\n      }, 3000)\n    }\n  }\n\n  const handleLogout = async (event) => {\n    event.preventDefault()\n    console.log('logging out with the username', username)\n    localStorage.clear()\n    window.location.reload()\n  }\n\n  const handleTitleChange = (event) => {\n    event.preventDefault()\n    setNewTitle(event.target.value)\n  }\n\n  const handleAuthorChange = (event) => {\n    event.preventDefault()\n    setNewAuthor(event.target.value)\n  }\n\n  const handleUrlChange = (event) => {\n    event.preventDefault()\n    setNewUrl(event.target.value)\n  }\n\n  const addBlog = (event) => {\n    event.preventDefault()\n    const blogObject = {\n      title: newTitle,\n      author: newAuthor,\n      url: newUrl\n    }\n\n    const hit = blogs.filter(blog => blog.title.toLowerCase() === newTitle.toLowerCase())\n\n    if (hit[0]) {\n      setClassName('error')\n      setNotificationMessage(\n        `A blog by the name ${hit[0].title} is already on Blogister.`\n      )\n      setTimeout(() => {\n        setClassName(null)\n        setNotificationMessage(null)\n      }, 2000)\n      setNewTitle('')\n      setNewAuthor('')\n      setNewUrl('')\n    } else {\n      blogService\n        .create(blogObject)\n        .then(returnedBlogs => {\n          setBlogs(blogs.concat(returnedBlogs))\n          setNewTitle('')\n          setNewAuthor('')\n          setNewUrl('')\n          setClassName('update')\n          setNotificationMessage(\n            `${blogObject.title} was added to the Blogister-list`\n          )\n          setTimeout(() => {\n            setClassName(null)\n            setNotificationMessage(null)\n          }, 2000)\n        })\n        .catch(error => {\n          setClassName('error')\n          setNotificationMessage(\n            `${error.response.data.error}`\n          )\n          setTimeout(() => {\n            setClassName(null)\n            setNotificationMessage(null)\n          }, 3000)\n        })\n    }\n\n  }\n\n\n  const loginForm = () => (\n    <Togglable buttonLabel='Log in'>\n      <LoginForm\n        username={username}\n        password={password}\n        onUsernameChange={({ target }) => setUsername(target.value)}\n        onPasswordChange={({ target }) => setPassword(target.value)}\n        handleSubmit={handleLogin}\n      />\n    </Togglable>\n  )\n\n  const blogForm = () => {\n    return (\n      <div>\n        <Togglable buttonLabel='new blog'>\n          <AddBlogForm\n            onSubmit={addBlog}\n            titleValue={newTitle}\n            onTitleChange={handleTitleChange}\n            authorValue={newAuthor}\n            onAuthorChange={handleAuthorChange}\n            urlValue={newUrl}\n            onUrlChange={handleUrlChange}\n          />\n        </Togglable>\n\n\n        <h2>blogs</h2>\n        {blogs.map(blog =>\n          <Blog key={blog.id} blog={blog} />\n        )}\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <p>Blog version 0.2 (work in progress)</p>\n\n      {user === null ?\n        loginForm() :\n        <div>\n          <p>Logged in as: {user.name} <button onClick={handleLogout}>logout</button></p>\n          {blogForm()}\n        </div>\n      }\n\n      <Notification message={notificationMessage} className={className} />\n\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}