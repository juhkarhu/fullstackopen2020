{"version":3,"sources":["components/DisplayBlog.js","services/blogs.js","services/login.js","components/Notification.js","components/Togglable.js","components/LoginForm.js","components/BlogForm.js","App.js","index.js"],"names":["DisplayBlog","props","blog","useState","blogObject","setBlogObject","visibility","setVisibility","showWhenVisible","display","buttonLabel","style","paddingTop","paddingLeft","border","borderWidth","marginBottom","classname","title","onClick","url","likes","updatedBlog","updateBlog","author","removeBlog","baseUrl","token","getAll","a","axios","get","response","data","create","config","headers","Authorization","post","remove","id","delete","exportedObjects","setToken","newToken","put","exportedObject","login","credentials","Notification","message","className","Togglable","visible","setVisible","hideWhenVisible","toggleVisibility","children","LoginForm","username","password","onUsernameChange","onPasswordChange","handleSubmit","onSubmit","value","onChange","type","AddBlogForm","createBlog","newTitle","setNewTitle","newAuthor","setNewAuthor","newUrl","setNewUrl","event","console","log","preventDefault","target","App","blogs","setBlogs","notificationMessage","setNotificationMessage","setClassName","setUsername","setPassword","user","setUser","useEffect","blogService","then","sort","b","loggedUserJSON","window","localStorage","getItem","JSON","parse","handleLogin","loginService","setItem","stringify","name","setTimeout","handleLogout","clear","location","reload","setNotification","createdBlog","concat","blogToUpdate","map","blogToBeRemoved","confirm","filter","exception","BlogForm","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d8c9abd8.chunk.js","sourcesContent":["import React, { useState, } from 'react'\n\n\nconst DisplayBlog = (props) => {\n\n  const blog = props.blog\n  const [blogObject, setBlogObject] = useState(blog)\n  const [visibility, setVisibility] = useState(false)\n  const showWhenVisible = { display: visibility ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisibility(!visibility)\n  }\n\n  const buttonLabel = visibility ? 'hide' : 'view'\n\n  const increaseLikes = () => {\n    const updatedBlog = ({\n      ...blog,\n      likes: blog.likes + 1\n    })\n    props.updateBlog(updatedBlog)\n    setBlogObject(updatedBlog)\n  }\n  const removeBlog = () => props.removeBlog(blog)\n\n  const blogStyle = {\n    paddingTop: 10,\n    paddingLeft: 2,\n    border: 'solid',\n    borderWidth: 1,\n    marginBottom: 5\n  }\n\n\n  return (\n    <div style={blogStyle} classname='blog'>\n      <div>\n      <p>{blog.title} <button onClick={toggleVisibility}>{buttonLabel}</button></p>\n      </div>\n      <div style={showWhenVisible}>\n        <p>{blog.url}</p>\n        <p>Likes: {blogObject.likes} <button onClick={increaseLikes}>Like</button></p> \n        {blog.author}\n        <button onClick={removeBlog}>Delete</button>\n        \n      </div>\n    </div>\n\n  )\n\n}\n\nexport default DisplayBlog","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = async () => {\n\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst create = async blogObject => {\n  const config = {\n    headers: { Authorization: token}\n  }\n\n  const response = await axios.post(baseUrl, blogObject, config)\n  return response.data\n}\n\nconst remove = async (id) => {\n\n  const config = {\n    headers: { Authorization: token},\n  }\n\n  const response = await axios.delete(baseUrl + `/${id}`, config)\n  return response.data\n}\n\nconst put = async (id, blog) => {\n\n  const config = {\n    headers: { Authorization: token},\n  }\n\n  const response = await axios.put(baseUrl + `/${id}`, blog, config)\n  return response.data\n\n  // const request = axios.put(baseUrl + `/${id}`, blog)\n  // return request.then(response => response.data)\n}\n\nconst exportedObjects = { getAll, setToken, create, put, remove }\n\nexport default exportedObjects","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nconst exportedObject = {login}\n\nexport default exportedObject","const Notification = ({\n  message,\n  className\n}) => {\n\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className={className}>\n      {message}\n    </div>\n  )\n}\n\n\nexport default Notification","import React, { useState } from 'react'\n\nconst Togglable = (props) => {\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n        <button onClick={toggleVisibility}>Cancel</button>\n      </div>\n    </div>\n  )\n}\n\nexport default Togglable","import React from 'react'\n\nconst LoginForm = ({\n  username,\n  password,\n  onUsernameChange,\n  onPasswordChange,\n  handleSubmit\n}) => {\n  return (\n    <div>\n      <h2>Login</h2>\n\n      <form onSubmit={handleSubmit}>\n        <div>\n          username\n          <input\n            value={username}\n            onChange={onUsernameChange}\n          />\n        </div>\n        <div>\n          password\n          <input\n            type=\"password\"\n            value={password}\n            onChange={onPasswordChange}\n          />\n        </div>\n        <button type=\"submit\">login</button>\n      </form>\n\n    </div>\n  )\n}\n\n\nexport default LoginForm","import React, { useState } from 'react'\n\n\n\n\n\nconst AddBlogForm = ({ createBlog }) => {\n\n    const [newTitle, setNewTitle] = useState('')\n    const [newAuthor, setNewAuthor] = useState('')\n    const [newUrl, setNewUrl] = useState('')\n\n    const handleTitleChange = (event) => {\n        event.preventDefault()\n        setNewTitle(event.target.value)\n    }\n\n    const handleAuthorChange = (event) => {\n        event.preventDefault()\n        setNewAuthor(event.target.value)\n    }\n\n    const handleUrlChange = (event) => {\n        event.preventDefault()\n        setNewUrl(event.target.value)\n    }\n\n\n    const addBlog = (event) => {\n        console.log('1')\n        event.preventDefault()\n        console.log('2')\n        createBlog({\n            title: newTitle,\n            author: newAuthor,\n            url: newUrl\n        })\n        console.log('3')\n        setNewTitle('')\n        setNewAuthor('')\n        setNewUrl('')\n    }\n\n\n    return (\n        <div>\n            <h2>Add a new blog to the list</h2>\n\n            <form onSubmit={addBlog}>\n                <div>\n                    Title: <input value={newTitle} onChange={handleTitleChange} />\n                </div>\n                <div>\n                    Author: <input value={newAuthor} onChange={handleAuthorChange} />\n                </div>\n                <div>\n                    Url: <input value={newUrl} onChange={handleUrlChange} />\n                </div>\n                <div>\n                    <button type=\"submit\">Add</button>\n                </div>\n            </form>\n\n        </div>\n\n    )\n\n}\n\n\nexport default AddBlogForm","import React, { useState, useEffect } from 'react'\nimport DisplayBlog from './components/DisplayBlog'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport Notification from './components/Notification'\nimport Togglable from './components/Togglable'\nimport LoginForm from './components/LoginForm'\nimport BlogForm from './components/BlogForm'\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n\n  const [notificationMessage, setNotificationMessage] = useState(null)\n  const [className, setClassName] = useState(null)\n\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const [user, setUser] = useState(null)\n\n\n\n  useEffect(() => {\n    console.log('useEffect pyörähtää')\n    blogService.getAll().then(blogs =>\n      // setBlogs(blogs)\n      setBlogs(blogs.sort(function(a, b) {\n        return a.likes - b.likes\n      }))\n    )\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, password\n      })\n      window.localStorage.setItem(\n        'loggedUser', JSON.stringify(user)\n      )\n      blogService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n      setClassName('update')\n      setNotificationMessage(`Logged in as ${user.name}`)\n      setTimeout(() => {\n        setClassName(null)\n        setNotificationMessage(null)\n      }, 3000)\n    } catch (exception) {\n      setClassName('delete')\n      setNotificationMessage('wrong username or password')\n      setTimeout(() => {\n        setClassName(null)\n        setNotificationMessage(null)\n      }, 3000)\n    }\n  }\n\n  const handleLogout = async (event) => {\n    event.preventDefault()\n    console.log('logging out with the username', username)\n    localStorage.clear()\n    window.location.reload()\n  }\n\n  const setNotification = ({ message, type }) => {\n    setClassName(type)\n    setNotificationMessage(\n      `${message}`\n    )\n    setTimeout(() => {\n      setClassName(null)\n      setNotificationMessage(null)\n    }, 3000)\n  }\n\n\n  const createBlog = async (blogObject) => {\n    try {\n      const createdBlog = await blogService\n        .create(blogObject)\n      console.log('returned and created blog from backend:', createdBlog)\n      setBlogs(blogs.concat(createdBlog).sort(function(a, b) {\n        return a.likes - b.likes\n      }))\n      setNotification({\n        message: `${blogObject.title} was added to the Blogister-list`,\n        type: 'update'\n      })\n    } catch (exception) {\n      setNotification({\n        message: `Cannot add ${blogObject.title}`,\n        type: 'error'\n      })\n\n\n    }\n  }\n\n\n  const updateBlog = async (blogToUpdate) => {\n    console.log('blogs', blogs)\n    console.log('1', blogToUpdate)\n    try {\n      const updatedBlog = await blogService\n        .put(blogToUpdate.id, blogToUpdate)\n\n      setBlogs(blogs.map(blog => blog.id !== blogToUpdate.id ? blog : updatedBlog).sort(function(a, b) {\n        return a.likes - b.likes\n      }))\n      setNotification({\n        message: `You liked ${blogToUpdate.title}!`,\n        type: 'update'\n      })\n    } catch (exception) {\n      setNotification({\n        message: `Could not update the ${blogToUpdate.title} blog.`,\n        type: 'delete'\n      })\n    }\n  }\n\n  const removeBlog = async (blogToBeRemoved) => {\n    try {\n      if (window.confirm(`Delete ${blogToBeRemoved.title} ?`)) {\n        blogService\n          .remove(blogToBeRemoved.id)\n        setBlogs(blogs.filter((blog => blog.id !== blogToBeRemoved.id)).sort(function(a, b) {\n          return a.likes - b.likes\n        }))\n        setNotification({\n          message: `${blogToBeRemoved.title} was removed from the Blogister-list`,\n          type: 'delete'\n        })\n      }\n    } catch (exception) {\n      setNotification({\n        message: `Error has occurred. Could not delete ${blogToBeRemoved.title}.`,\n        type: 'delete'\n      })\n    }\n  }\n\n\n\n  const loginForm = () => (\n    <Togglable buttonLabel='Log in'>\n      <LoginForm\n        username={username}\n        password={password}\n        onUsernameChange={({ target }) => setUsername(target.value)}\n        onPasswordChange={({ target }) => setPassword(target.value)}\n        handleSubmit={handleLogin}\n      />\n    </Togglable>\n  )\n\n  const blogAddingForm = () => {\n    return (\n      <div>\n        <Togglable buttonLabel='Add a new blog'>\n          <BlogForm\n            createBlog={createBlog}\n          />\n        </Togglable>\n\n\n\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <p>Blog version 0.2 (work in progress)</p>\n      <Notification message={notificationMessage} className={className} />\n      {user === null ?\n        loginForm() :\n        <div>\n          <p>Logged in as: {user.name} <button onClick={handleLogout}>logout</button></p>\n          {blogAddingForm()}\n\n          <h2>blogs</h2>\n          <ul>\n            {blogs.map(blog =>\n              <DisplayBlog\n                key={blog.id}\n                blog={blog}\n                updateBlog={updateBlog}\n                removeBlog={removeBlog}\n              />\n            )}\n          </ul>\n\n\n        </div>\n      }\n\n    </div>\n  )\n}\n\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}