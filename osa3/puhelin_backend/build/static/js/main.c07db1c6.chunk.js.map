{"version":3,"sources":["components/SearchForm.js","components/AddPersonForm.js","components/DisplayContact.js","services/contacts.js","components/Notification.js","App.js","index.js"],"names":["SearchForm","props","onChange","AddPersonForm","onSubmit","value","nameValue","onNameChange","numberValue","onNumberChange","type","DisplayContact","item","toggleDelete","name","number","onClick","baseUrl","axios","get","then","response","data","newObject","console","log","post","id","delete","person","put","Notification","message","className","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","searchTerm","setSearchTerm","personsToShow","filter","toLowerCase","includes","setMessage","setClassName","fetchPersons","useCallback","contactService","returnedContacts","useEffect","initialContacts","event","preventDefault","target","personObject","hit","length","setTimeout","window","confirm","found_person","concat","map","pers","find","catch","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c07db1c6.chunk.js","sourcesContent":["import React from 'react'\n\n\nconst SearchForm = (props) => (\n    <div>\n        Search <input onChange={props.onChange} />\n    </div>\n)\n\nexport default SearchForm","import React from 'react'\n\n\nconst AddPersonForm = (props) => (\n    <form onSubmit={props.onSubmit}>\n        <div>\n            name: <input value={props.nameValue} onChange={props.onNameChange} />\n        </div>\n        <div>\n            number: <input value={props.numberValue} onChange={props.onNumberChange} />\n        </div>\n        <div>\n            <button type=\"submit\">add</button>\n        </div>\n    </form>\n)\n\nexport default AddPersonForm","import React from 'react'\n\nconst DisplayContact = ({ item, toggleDelete }) => {\n\n    return (\n        <li key={item.name}>\n                {item.name} {item.number}\n                <button onClick={toggleDelete}>delete</button>\n            </li>\n    )\n\n}\n\n\n\nexport default DisplayContact","import axios from 'axios'\n// const baseUrl = 'http://localhost:3001/persons'\nconst baseUrl = 'api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  console.log(newObject)\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\n// const update = (id, newObject) => {\n//   const request = axios.put(`${baseUrl}/${id}`, newObject)\n//   return request.then(response => response.data)\n// }\n\nconst remove = (id) => {\n  const request = axios.delete(baseUrl + `/${id}`)\n  return request.then(response => response.data)\n}\n\nconst put = (person) => {\n  // console.log('puttia koittamassa')\n  // console.log('saadut tiedot, newNumber tietue:', person, 'person.id', person.id)\n\n  // const request = axios.put(baseUrl + `/${id[0].id}`, {name: id[0].name, number: newNumber, id: id[0].id})\n  const request = axios.put(baseUrl + `/${person.id}`, {person})\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, remove, put }","const Notification = ({message, className}) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div className={className}>\n            {message}\n        </div>\n    )\n}\n\n\nexport default Notification","import React, { useState, useEffect, useCallback } from 'react'\nimport SearchForm from './components/SearchForm'\nimport AddPersonForm from './components/AddPersonForm'\nimport DisplayContact from './components/DisplayContact'\nimport contactService from './services/contacts'\nimport Notification from './components/Notification'\n\n\nconst App = () => {\n\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [searchTerm, setSearchTerm] = useState('')\n  const personsToShow = persons.filter(person => person.name.toLowerCase().includes(searchTerm.toLowerCase()))\n  const [message, setMessage] = useState(null)\n  const [className, setClassName] = useState(null)\n\n\n  const fetchPersons = useCallback(() => {\n    contactService\n      .getAll()\n      .then(returnedContacts => {\n        setPersons(returnedContacts)\n      })\n  }, [])\n\n  useEffect(() => {\n    contactService\n      .getAll()\n      .then(initialContacts => {\n        setPersons(initialContacts)\n      })\n  }, [])\n\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n    console.log(personObject)\n    // Tutkitaan onko listassa jo saman nimista henkiloa. \n    const hit = persons.filter(person => person.name.toLowerCase() === newName.toLowerCase()).length > 0\n    console.log(hit)\n\n    if (personObject.number.length <= 0) {\n      // console.log('tapahtuu jos number pituus pienempi tai yhtasuuri kuin nolla')\n      setClassName('error')\n      setMessage(\n        `Only a name was given, you need to specify a number as well`\n      )\n      setTimeout(() => {\n        setClassName(null)\n        setMessage(null)\n      }, 2000)\n    } else if (hit) {\n      // console.log('hit oli totta, kysytaan halutaanko paivittaa tietue')\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new number?`)) {\n        \n        // ID luodaan vasta backendissa, mitas nyt.\n        // const personObject = persons.filter(person => person.name.toLowerCase() === newName.toLowerCase())\n        \n        \n        \n        // console.log('paivitetaan numero')\n        const found_person = persons.filter(person => person.name.toLowerCase() === personObject.name.toLowerCase())\n        // console.log('loydetty henkilo', found_person[0])\n\n        found_person[0].number = personObject.number\n        // console.log('loydetty henkilo numeron paivityksen jalkeen', found_person[0])\n        const id = found_person[0].id\n        // console.log('loydetty id', id)\n        contactService\n          .put(found_person[0])\n          .then(() => {\n            fetchPersons()\n          })\n        setClassName('update')\n        setMessage(\n          `${found_person[0].name}'s number was updated`\n        )\n        setTimeout(() => {\n          setClassName(null)\n          setMessage(null)\n        }, 2000)\n\n      }\n      else {\n        setNewName('')\n        setNewNumber('')\n        setSearchTerm('')\n      }\n    }\n    else {\n      contactService\n        .create(personObject)\n        .then(returnedContacts => {\n          setPersons(persons.concat(returnedContacts))\n          setNewName('')\n          setNewNumber('')\n          setSearchTerm('')\n        })\n      setClassName('update')\n      setMessage(\n        `${personObject.name} was added to the phonebook`\n      )\n      setTimeout(() => {\n        setClassName(null)\n        setMessage(null)\n      }, 2000)\n    }\n  }\n\n  const toggleDelete = (id) => {\n    console.log('note no ' + id + ' needs to be deleted')\n    const pers = personsToShow.find(person => person.id === id)\n    if (window.confirm(`Delete ${pers.name} ?`)) {\n      contactService\n        .remove(id)\n        .then(() => {\n          fetchPersons()\n          setClassName('delete')\n          setMessage(\n            `${pers.name} was removed from the phonebook`\n          )\n          setTimeout(() => {\n            setClassName(null)\n            setMessage(null)\n          }, 2000)\n        })\n        .catch(error => {\n          fetchPersons()\n          setClassName('delete')\n          setMessage(\n            `Information of ${pers.name} has already been removed from the server.`\n          )\n          setTimeout(() => {\n            setClassName(null)\n            setMessage(null)\n          }, 2000)\n        })\n\n    }\n  }\n\n  const handlePersonChange = (event) => {\n    event.preventDefault()\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    event.preventDefault()\n    setNewNumber(event.target.value)\n  }\n\n  const handleSearchTermChange = (event) => {\n    event.preventDefault()\n    setSearchTerm(event.target.value.toLowerCase())\n  }\n\n\n\n\n  return (\n    <div>\n      <h1>Phonebook v. 0.0.4</h1>\n      <Notification message={message} className={className} />\n      <SearchForm onChange={handleSearchTermChange} />\n      <h2>add a new</h2>\n      <AddPersonForm onSubmit={addPerson} nameValue={newName} onNameChange={handlePersonChange} numberValue={newNumber} onNumberChange={handleNumberChange} />\n      <h2>Contacts</h2>\n      <ul>\n        {personsToShow.map(person => (\n          <DisplayContact\n            key={person.id}\n            item={person}\n            toggleDelete={() => toggleDelete(person.id)}\n          />\n        ))}\n      </ul>\n\n    </div>\n\n  )\n\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n) "],"sourceRoot":""}