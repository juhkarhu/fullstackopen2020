{"version":3,"sources":["components/SearchForm.js","components/AddBlogForm.js","components/DisplayBlog.js","components/Notification.js","components/LoginForm.js","components/Togglable.js","services/login.js","services/contacts.js","App.js","index.js"],"names":["SearchForm","props","onChange","AddBlogForm","onSubmit","titleValue","onTitleChange","authorValue","onAuthorChange","urlValue","onUrlChange","value","type","DisplayBlog","blog","toggleDelete","toggleLike","className","title","author","likes","onClick","Notification","message","LoginForm","username","password","onUsernameChange","onPasswordChange","handleSubmit","Togglable","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","style","buttonLabel","children","exportedObject","login","credentials","a","axios","post","response","data","baseUrl","token","getAll","get","then","create","newObject","config","headers","Authorization","remove","id","console","log","delete","put","setToken","newToken","App","blogs","setBlogs","notificationMessage","setNotificationMessage","newTitle","setNewTitle","newAuthor","setNewAuthor","newUrl","setNewUrl","searchTerm","setSearchTerm","blogsToShow","filter","toLowerCase","includes","setClassName","setUsername","setPassword","user","setUser","fetchPosts","useCallback","contactService","returnedBlogs","useEffect","initialBlogs","loggedUserJSON","window","localStorage","getItem","JSON","parse","addBlog","event","preventDefault","blogObject","url","hit","setTimeout","concat","catch","error","handleTitleChange","target","handleAuthorChange","handleUrlChange","handleSearchTermChange","handleLogin","loginService","setItem","stringify","handleLogout","clear","location","reload","name","map","likedBlog","find","person","confirm","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.93a7df6d.chunk.js","sourcesContent":["import React from 'react'\n\n\nconst SearchForm = (props) => (\n    <div>\n        Search <input onChange={props.onChange} />\n    </div>\n)\n\nexport default SearchForm","import React from 'react'\n\n\nconst AddBlogForm = ({ onSubmit, titleValue, onTitleChange, authorValue, onAuthorChange, urlValue, onUrlChange }) => (\n    <form onSubmit={onSubmit}>\n        <div>\n            Title: <input value={titleValue} onChange={onTitleChange} />\n        </div>\n        <div>\n            Author: <input value={authorValue} onChange={onAuthorChange} />\n        </div>\n        <div>\n            Url: <input value={urlValue} onChange={onUrlChange} />\n        </div>\n        <div>\n            <button type=\"submit\">Add</button>\n        </div>\n    </form>\n)\n\n\nexport default AddBlogForm","import React from 'react'\n\nconst DisplayBlog = ({ blog, toggleDelete, toggleLike }) => {\n    // console.log('displayblogissa', blog)\n\t// console.log('blog', blog)\n    return (\n        <li className='blog' key={blog.title}>\n            {blog.title} by {blog.author} with {blog.likes} likes\n\t\t\t<button onClick={toggleLike}>like</button>\n            <button onClick={toggleDelete}>delete</button>\n        </li>\n    )\n\n}\n\n\nexport default DisplayBlog","const Notification = ({message, className}) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div className={className}>\n            {message}\n        </div>\n    )\n}\n\n\nexport default Notification","import React from 'react'\n\nconst LoginForm = ({\n  username,\n  password,\n  onUsernameChange,\n  onPasswordChange,\n  handleSubmit\n}) => {\n  return (\n    <div>\n      <h2>Login</h2>\n\n      <form onSubmit={handleSubmit}>\n        <div>\n          username\n          <input\n            value={username}\n            onChange={onUsernameChange}\n          />\n        </div>\n        <div>\n          password\n          <input\n            type=\"password\"\n            value={password}\n            onChange={onPasswordChange}\n          />\n        </div>\n        <button type=\"submit\">login</button>\n      </form>\n\n    </div>\n  )\n}\n\n\nexport default LoginForm","import React, { useState } from 'react'\n\nconst Togglable = (props) => {\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n        <button onClick={toggleVisibility}>Cancel</button>\n      </div>\n    </div>\n  )\n}\n\nexport default Togglable","import axios from 'axios'\nconst baseUrl = '/api/login' \n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nconst exportedObject = { login }\n\nexport default exportedObject","import axios from 'axios'\n// const baseUrl = 'http://localhost:3001/persons'\nconst baseUrl = 'api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token},\n  }\n\n  // vanhat:\n  // console.log(newObject)\n  // const request = axios.post(baseUrl, newObject)\n  // return request.then(response => response.data)\n  \n  //uusi:\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\n// const update = (id, newObject) => {\n//   const request = axios.put(`${baseUrl}/${id}`, newObject)\n//   return request.then(response => response.data)\n// }\n\nconst remove = async (id) => {\n  console.log('tassa', id)\n  const config = {\n    headers: { Authorization: token},\n  }\n\n  // Old method I guess, check\n  // const request = axios.delete(baseUrl + `/${id}`)\n  // return request.then(response => response.data)\n\n  const response = await axios.delete(baseUrl + `/${id}`, config)\n  return response.data\n}\n\nconst put = (id, blog) => {\n//   console.log('puttia koittamassa')\n//   console.log('putissa saatu id:', id, 'ja blog:', blog)\n\n  const request = axios.put(baseUrl + `/${id}`, blog)\n  return request.then(response => response.data)\n}\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { getAll, create, remove, put, setToken }","import React, { useState, useEffect, useCallback } from 'react'\nimport SearchForm from './components/SearchForm'\nimport AddBlogForm from './components/AddBlogForm'\nimport DisplayBlog from './components/DisplayBlog'\nimport Notification from './components/Notification'\nimport LoginForm from './components/LoginForm'\n\nimport Togglable from './components/Togglable'\n\nimport loginService from './services/login'\nimport contactService from './services/contacts'\n\n\nconst App = () => {\n\n\tconst [blogs, setBlogs] = useState([])\n\tconst [notificationMessage, setNotificationMessage] = useState(null)\n\n\tconst [newTitle, setNewTitle] = useState('')\n\tconst [newAuthor, setNewAuthor] = useState('')\n\tconst [newUrl, setNewUrl] = useState('')\n\n\tconst [searchTerm, setSearchTerm] = useState('')\n\tconst blogsToShow = blogs.filter(blog => blog.title.toLowerCase().includes(searchTerm.toLowerCase()))\n\tconst [className, setClassName] = useState(null)\n\n\tconst [username, setUsername] = useState('')\n\tconst [password, setPassword] = useState('')\n\n\tconst [user, setUser] = useState(null)\n\n\n\tconst fetchPosts = useCallback(() => {\n\t\tcontactService\n\t\t\t.getAll()\n\t\t\t.then(returnedBlogs => {\n\t\t\t\tsetBlogs(returnedBlogs)\n\t\t\t})\n\t}, [])\n\n\tuseEffect(() => {\n\t\tcontactService\n\t\t\t.getAll()\n\t\t\t.then(initialBlogs => {\n\t\t\t\tsetBlogs(initialBlogs)\n\t\t\t})\n\t}, [])\n\n\tuseEffect(() => {\n\t\tconst loggedUserJSON = window.localStorage.getItem('loggedBlogAppUser')\n\t\tif (loggedUserJSON) {\n\t\t\tconst user = JSON.parse(loggedUserJSON)\n\t\t\tsetUser(user)\n\t\t\tcontactService.setToken(user.token)\n\t\t}\n\t}, [])\n\n\n\tconst addBlog = (event) => {\n\t\tevent.preventDefault()\n\t\tconst blogObject = {\n\t\t\ttitle: newTitle,\n\t\t\tauthor: newAuthor,\n\t\t\turl: newUrl\n\t\t}\n\t\t// *console.log(blogObject)\n\n\t\t// Checks if a blog with the same already exists\n\t\tconst hit = blogs.filter(blog => blog.title.toLowerCase() === newTitle.toLowerCase())\n\n\t\tif (hit[0]) {\n\t\t\tsetClassName('error')\n\t\t\tsetNotificationMessage(\n\t\t\t\t`A blog by the name ${hit[0].title} is already on Blogister.`\n\t\t\t)\n\t\t\tsetTimeout(() => {\n\t\t\t\tsetClassName(null)\n\t\t\t\tsetNotificationMessage(null)\n\t\t\t}, 2000)\n\t\t\tsetNewTitle('')\n\t\t\tsetNewAuthor('')\n\t\t\tsetNewUrl('')\n\t\t\tsetSearchTerm('')\n\t\t} else {\n\t\t\tcontactService\n\t\t\t\t.create(blogObject)\n\t\t\t\t.then(returnedBlogs => {\n\t\t\t\t\tsetBlogs(blogs.concat(returnedBlogs))\n\t\t\t\t\tsetNewTitle('')\n\t\t\t\t\tsetNewAuthor('')\n\t\t\t\t\tsetNewUrl('')\n\t\t\t\t\tsetSearchTerm('')\n\t\t\t\t\tsetClassName('update')\n\t\t\t\t\tsetNotificationMessage(\n\t\t\t\t\t\t`${blogObject.title} was added to the Blogister-list`\n\t\t\t\t\t)\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tsetClassName(null)\n\t\t\t\t\t\tsetNotificationMessage(null)\n\t\t\t\t\t}, 2000)\n\t\t\t\t})\n\t\t\t\t.catch(error => {\n\t\t\t\t\tsetClassName('error')\n\t\t\t\t\tsetNotificationMessage(\n\t\t\t\t\t\t`${error.response.data.error}`\n\t\t\t\t\t)\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tsetClassName(null)\n\t\t\t\t\t\tsetNotificationMessage(null)\n\t\t\t\t\t}, 3000)\n\t\t\t\t})\n\t\t}\n\t}\n\n\tconst toggleLike = (id) => {\n\t\t// console.log('blog no ' + id + ' needs to be liked')\n\t\tconst hits = blogs.filter(blog => blog.id === id)\n\t\tconst likedBlog = hits[0]\n\n\t\tconst blogObject = {\n\t\t\ttitle: likedBlog.title,\n\t\t\tauthor: likedBlog.author,\n\t\t\turl: likedBlog.url,\n\t\t\tlikes: likedBlog.likes + 1\n\t\t}\n\t\tcontactService\n\t\t\t.put(id, blogObject)\n\t\t\t.then(() => {\n\t\t\t\tfetchPosts()\n\t\t\t\tsetClassName('update')\n\t\t\t\tsetNotificationMessage(\n\t\t\t\t\t`You liked ${blogObject.title}!`\n\t\t\t\t)\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tsetClassName(null)\n\t\t\t\t\tsetNotificationMessage(null)\n\t\t\t\t}, 3000)\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.log(error)\n\t\t\t})\n\n\t}\n\n\tconst toggleDelete = (id) => {\n\t\tconsole.log('blog no ' + id + ' needs to be deleted')\n\t\tconst blog = blogsToShow.find(person => person.id === id)\n\t\tif (window.confirm(`Delete ${blog.title} ?`)) {\n\t\t\tcontactService\n\t\t\t\t.remove(id)\n\t\t\t\t.then(() => {\n\t\t\t\t\tfetchPosts()\n\t\t\t\t\tsetClassName('delete')\n\t\t\t\t\tsetNotificationMessage(\n\t\t\t\t\t\t`${blog.title} was removed from the Blogister-list`\n\t\t\t\t\t)\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tsetClassName(null)\n\t\t\t\t\t\tsetNotificationMessage(null)\n\t\t\t\t\t}, 2000)\n\t\t\t\t})\n\t\t\t\t.catch(error => {\n\t\t\t\t\tfetchPosts()\n\t\t\t\t\tsetClassName('delete')\n\t\t\t\t\tsetNotificationMessage(\n\t\t\t\t\t\t`Error has occurred. Could not delete ${blog.title}.`\n\t\t\t\t\t)\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tsetClassName(null)\n\t\t\t\t\t\tsetNotificationMessage(null)\n\t\t\t\t\t}, 2000)\n\t\t\t\t})\n\n\t\t}\n\t}\n\n\tconst handleTitleChange = (event) => {\n\t\tevent.preventDefault()\n\t\tsetNewTitle(event.target.value)\n\t}\n\n\tconst handleAuthorChange = (event) => {\n\t\tevent.preventDefault()\n\t\tsetNewAuthor(event.target.value)\n\t}\n\n\tconst handleUrlChange = (event) => {\n\t\tevent.preventDefault()\n\t\tsetNewUrl(event.target.value)\n\t}\n\n\tconst handleSearchTermChange = (event) => {\n\t\tevent.preventDefault()\n\t\tsetSearchTerm(event.target.value.toLowerCase())\n\t}\n\n\tconst handleLogin = async (event) => {\n\t\tevent.preventDefault()\n\t\t//console.log('logging in with', username)\n\t\ttry {\n\t\t\tconst user = await loginService.login({\n\t\t\t\tusername, password\n\t\t\t})\n\t\t\twindow.localStorage.setItem(\n\t\t\t\t'loggedBlogAppUser', JSON.stringify(user)\n\t\t\t)\n\t\t\tcontactService.setToken(user.token)\n\t\t\tsetUser(user)\n\t\t\tsetUsername('')\n\t\t\tsetPassword('')\n\t\t} catch (exception) {\n\t\t\tsetClassName('delete')\n\t\t\tsetNotificationMessage('wrong username or password')\n\t\t\tsetTimeout(() => {\n\t\t\t\tsetClassName(null)\n\t\t\t\tsetNotificationMessage(null)\n\t\t\t}, 5000)\n\t\t}\n\t}\n\n\tconst handleLogout = async (event) => {\n\t\tevent.preventDefault()\n\t\t//console.log('logging out with the username', username)\n\t\tlocalStorage.clear()\n\t\twindow.location.reload()\n\t\tsetClassName('update')\n\t\tsetNotificationMessage('Logged out')\n\t\tsetTimeout(() => {\n\t\t\tsetClassName(null)\n\t\t\tsetNotificationMessage(null)\n\t\t}, 5000)\n\n\t}\n\n\tconst loginForm = () => (\n\t\t<Togglable buttonLabel='log in'>\n\t\t\t<LoginForm\n\t\t\t\tusername={username}\n\t\t\t\tpassword={password}\n\t\t\t\tonUsernameChange={({ target }) => setUsername(target.value)}\n\t\t\t\tonPasswordChange={({ target }) => setPassword(target.value)}\n\t\t\t\thandleSubmit={handleLogin}\n\t\t\t/>\n\t\t</Togglable>\n\t)\n\n\tconst blogForm = () => {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<SearchForm onChange={handleSearchTermChange} />\n\t\t\t\t<h2>Add a new blog to the list</h2>\n\n\t\t\t\t<Togglable buttonLabel='Add a new blog'>\n\t\t\t\t\t<AddBlogForm\n\t\t\t\t\t\tonSubmit={addBlog}\n\t\t\t\t\t\ttitleValue={newTitle}\n\t\t\t\t\t\tonTitleChange={handleTitleChange}\n\t\t\t\t\t\tauthorValue={newAuthor}\n\t\t\t\t\t\tonAuthorChange={handleAuthorChange}\n\t\t\t\t\t\turlValue={newUrl}\n\t\t\t\t\t\tonUrlChange={handleUrlChange}\n\t\t\t\t\t/>\n\t\t\t\t</Togglable>\n\n\t\t\t\t<h2>Blogs</h2>\n\t\t\t\t<ul>\n\t\t\t\t\t{blogsToShow.map(blog => (\n\t\t\t\t\t\t<DisplayBlog\n\t\t\t\t\t\t\tkey={blog.id}\n\t\t\t\t\t\t\tblog={blog}\n\t\t\t\t\t\t\ttoggleLike={() => toggleLike(blog.id)}\n\t\t\t\t\t\t\ttoggleDelete={() => toggleDelete(blog.id)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t</div>\n\n\t\t)\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>Blogister v. 0.0.3.7.2</h1>\n\n\t\t\t{user === null ?\n\t\t\t\tloginForm() :\n\t\t\t\t<div>\n\t\t\t\t\t<p>Logged in as: {user.name} <button onClick={handleLogout}>logout</button></p>\n\t\t\t\t\t{blogForm()}\n\t\t\t\t</div>\n\t\t\t}\n\n\t\t\t<Notification message={notificationMessage} className={className} />\n\n\t\t</div>\n\t)\n\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n) "],"sourceRoot":""}