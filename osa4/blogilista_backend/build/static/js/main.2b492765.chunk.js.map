{"version":3,"sources":["components/SearchForm.js","components/AddBlogForm.js","components/DisplayBlog.js","services/contacts.js","components/Notification.js","App.js","index.js"],"names":["SearchForm","props","onChange","AddPersonForm","onSubmit","value","titleValue","onTitleChange","authorValue","onAuthorChange","urlValue","onUrlChange","type","DisplayBlog","blog","toggleDelete","console","log","title","author","onClick","baseUrl","axios","get","then","response","data","newObject","post","id","delete","Notification","message","className","App","useState","blogs","setBlogs","notificationMessage","setNotificationMessage","newTitle","setNewTitle","newAuthor","setNewAuthor","newUrl","setNewUrl","searchTerm","setSearchTerm","blogsToShow","filter","toLowerCase","includes","setClassName","fetchPosts","useCallback","contactService","returnedBlogs","useEffect","initialBlogs","event","preventDefault","target","AddBlogForm","blogObject","url","concat","setTimeout","catch","error","map","find","person","window","confirm","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2b492765.chunk.js","sourcesContent":["import React from 'react'\n\n\nconst SearchForm = (props) => (\n    <div>\n        Search <input onChange={props.onChange} />\n    </div>\n)\n\nexport default SearchForm","import React from 'react'\n\n\nconst AddPersonForm = (props) => (\n    <form onSubmit={props.onSubmit}>\n        <div>\n            Title: <input value={props.titleValue} onChange={props.onTitleChange} />\n        </div>\n        <div>\n            Author: <input value={props.authorValue} onChange={props.onAuthorChange} />\n        </div>\n        <div>\n            Url: <input value={props.urlValue} onChange={props.onUrlChange} />\n        </div>\n        <div>\n            <button type=\"submit\">add</button>\n        </div>\n    </form>\n)\n\nexport default AddPersonForm","import React from 'react'\n\nconst DisplayBlog = ({ blog, toggleDelete }) => {\n    console.log('displayblogissa', blog)\n    return (\n        <li key={blog.title}>\n            {blog.title} by {blog.author}\n            <button onClick={toggleDelete}>delete</button>\n        </li>\n    )\n\n}\n\n\nexport default DisplayBlog","import axios from 'axios'\n// const baseUrl = 'http://localhost:3001/persons'\nconst baseUrl = 'api/blogs'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  console.log(newObject)\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\n// const update = (id, newObject) => {\n//   const request = axios.put(`${baseUrl}/${id}`, newObject)\n//   return request.then(response => response.data)\n// }\n\nconst remove = (id) => {\n  const request = axios.delete(baseUrl + `/${id}`)\n  return request.then(response => response.data)\n}\n\nconst put = (person) => {\n  // console.log('puttia koittamassa')\n\n  const request = axios.put(baseUrl + `/${person.id}`, {person})\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, remove, put }","const Notification = ({message, className}) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div className={className}>\n            {message}\n        </div>\n    )\n}\n\n\nexport default Notification","import React, { useState, useEffect, useCallback } from 'react'\nimport SearchForm from './components/SearchForm'\nimport AddBlogForm from './components/AddBlogForm'\nimport DisplayBlog from './components/DisplayBlog'\nimport contactService from './services/contacts'\nimport Notification from './components/Notification'\n\n\nconst App = () => {\n\n  const [blogs, setBlogs] = useState([])\n  const [notificationMessage, setNotificationMessage] = useState(null)\n\n  const [newTitle, setNewTitle] = useState('')\n  const [newAuthor, setNewAuthor] = useState('')\n  const [newUrl, setNewUrl] = useState('')\n\n  const [searchTerm, setSearchTerm] = useState('')\n  const blogsToShow = blogs.filter(blog => blog.title.toLowerCase().includes(searchTerm.toLowerCase()))\n  const [className, setClassName] = useState(null)\n\n\n  const fetchPosts = useCallback(() => {\n    contactService\n      .getAll()\n      .then(returnedBlogs => {\n        setBlogs(returnedBlogs)\n      })\n  }, [])\n\n\n  useEffect(() => {\n    contactService\n      .getAll()\n      .then(initialBlogs => {\n        setBlogs(initialBlogs)\n      })\n  }, [])\n\n  const addBlog = (event) => {\n    event.preventDefault()\n    const blogObject = {\n      title: newTitle,\n      author: newAuthor,\n      url: newUrl\n    }\n    console.log(blogObject)\n\n    // Tässä voisi tutkia onko listassa jo saman nimista blogia. \n    // const hit = blogs.filter(blog => blog.title.toLowerCase() === newTitle.toLowerCase()).length > 0\n\n    // console.log(hit)\n\n    // Jos jokin kentistä on tyhjä, niin tehdään seuraavat. \n    // if (blogObject.number.length <= 0) {\n    //   setClassName('error')\n    //   setNotificationMessage(\n    //     `Only a name was given, you need to specify a number as well`\n    //   )\n    //   setTimeout(() => {\n    //     setClassName(null)\n    //     setNotificationMessage(null)\n    //   }, 2000)\n    // } else \n\n    // Jos tietokannassa oli jo tän niminen blogi, niin mitäs siitä voisikaan päivitellä.\n    // if (hit) {\n    //   if (window.confirm(`${newTitle} is already added to phonebook, replace the old number with a new number?`)) {\n    //     const found_blog = blogs.filter(blog => blog.title.toLowerCase() === blogObject.title.toLowerCase())\n    //     found_blog[0].number = blogObject.number\n    //     // const id = found_person[0].id\n    //     contactService\n    //       .put(found_blog[0])\n    //       .then(() => {\n    //         fetchPosts()\n    //       })\n    //     setClassName('update')\n    //     setNotificationMessage(\n    //       `${found_blog[0].name}'s number was updated`\n    //     )\n    //     setTimeout(() => {\n    //       setClassName(null)\n    //       setNotificationMessage(null)\n    //     }, 2000)\n    //   }\n    //   else {\n    //     setNewName('')\n    //     setNewAuthor('')\n    //     setSearchTerm('')\n    //   }\n    // }\n    // else {\n\n    contactService\n      .create(blogObject)\n      .then(returnedBlogs => {\n        setBlogs(blogs.concat(returnedBlogs))\n        setNewTitle('')\n        setNewAuthor('')\n        setNewUrl('')\n        setSearchTerm('')\n        setClassName('update')\n        setNotificationMessage(\n          `${blogObject.title} was added to the Blogister-list`\n        )\n        setTimeout(() => {\n          setClassName(null)\n          setNotificationMessage(null)\n        }, 2000)\n      })\n      .catch(error => {\n        setClassName('error')\n        setNotificationMessage(\n          `${error.response.data.error}`\n        )\n        setTimeout(() => {\n          setClassName(null)\n          setNotificationMessage(null)\n        }, 4000)\n      })\n\n  }\n\n\nconst toggleDelete = (id) => {\n  console.log('blog no ' + id + ' needs to be deleted')\n  const blog = blogsToShow.find(person => person.id === id)\n  if (window.confirm(`Delete ${blog.title} ?`)) {\n    contactService\n      .remove(id)\n      .then(() => {\n        fetchPosts()\n        setClassName('delete')\n        setNotificationMessage(\n          `${blog.title} was removed from the Blogister-list`\n        )\n        setTimeout(() => {\n          setClassName(null)\n          setNotificationMessage(null)\n        }, 2000)\n      })\n      .catch(error => {\n        fetchPosts()\n        setClassName('delete')\n        setNotificationMessage(\n          `Information of ${blog.title} has already been removed from the server.`\n        )\n        setTimeout(() => {\n          setClassName(null)\n          setNotificationMessage(null)\n        }, 2000)\n      })\n\n  }\n}\n\nconst handleTitleChange = (event) => {\n  event.preventDefault()\n  setNewTitle(event.target.value)\n}\n\nconst handleAuthorChange = (event) => {\n  event.preventDefault()\n  setNewAuthor(event.target.value)\n}\n\nconst handleUrlChange = (event) => {\n  event.preventDefault()\n  setNewUrl(event.target.value)\n}\n\nconst handleSearchTermChange = (event) => {\n  event.preventDefault()\n  setSearchTerm(event.target.value.toLowerCase())\n}\n\n\n\n\nreturn (\n  <div>\n    <h1>Blogister v. 0.0.2</h1>\n    <Notification message={notificationMessage} className={className} />\n    <SearchForm onChange={handleSearchTermChange} />\n    <h2>Add a new blog to the list</h2>\n    <AddBlogForm onSubmit={addBlog} titleValue={newTitle} onTitleChange={handleTitleChange} authorValue={newAuthor} onAuthorChange={handleAuthorChange} urlValue={newUrl} onUrlChange={handleUrlChange} />\n    <h2>Blogs</h2>\n    <ul>\n      {blogsToShow.map(blog => (\n        <DisplayBlog\n          key={blog.id}\n          blog={blog}\n          toggleDelete={() => toggleDelete(blog.id)}\n        />\n      ))}\n    </ul>\n  </div>\n\n)\n\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n) "],"sourceRoot":""}